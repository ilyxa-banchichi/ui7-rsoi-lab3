version: "3"
services:
  postgres:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - 8000:5432
    networks:
      - db-local

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=redis_pass
    ports:
      - 8001:6379
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - redis-local

  gateway:
    image: ilyxabanchichi/rsoi-lab3-gateway:latest
    restart: always
    env_file:
      - .env
    build:
      context: ./app
      dockerfile: ./Gateway/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__RatingService=http://rating-service:8050
      - ConnectionStrings__LibraryService=http://library-service:8060
      - ConnectionStrings__ReservationService=http://reservation-service:8070
      - ConnectionStrings__RedisQueue=redis:6379,password=redis_pass,abortConnect=false
    ports:
      - 8080:8080
    networks:
      - library-local
      - reservation-local
      - rating-local
      - redis-local

  library-service:
    image: ilyxabanchichi/rsoi-lab3-library-service:latest
    restart: always
    env_file:
      - .env
    build:
      context: ./app
      dockerfile: ./LibraryService/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
    environment:
      - ASPNETCORE_URLS=http://+:8060
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=libraries;Username=program;Password=test
    ports:
      - 8060:8060
    depends_on:
      - postgres
    networks:
      - db-local
      - library-local

  reservation-service:
    image: ilyxabanchichi/rsoi-lab3-reservation-service:latest
    restart: always
    env_file:
      - .env
    build:
      context: ./app/reservation-service
      dockerfile: ./Dockerfile
    ports:
      - ${ReservationService__PORT}:80
    depends_on:
      - postgres
    networks:
      - db-local
      - reservation-local

  rating-service:
    image: ilyxabanchichi/rsoi-lab3-rating-service:latest
    restart: always
    env_file:
      - .env
    build:
      context: ./app
      dockerfile: ./RatingService/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
    environment:
      - ASPNETCORE_URLS=http://+:8050
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=ratings;Username=program;Password=test
    ports:
      - 8050:8050
    depends_on:
      - postgres
    networks:
      - db-local
      - rating-local

networks:
  library-local:
  reservation-local:
  rating-local:
  db-local:
    driver: bridge
  redis-local:

volumes:
  db-data:
  redis-data: